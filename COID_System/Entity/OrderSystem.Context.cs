//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace COID_System.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OrderSystemEntities : DbContext
    {
        public OrderSystemEntities()
            : base("name=OrderSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<balance> balances { get; set; }
        public virtual DbSet<category> categories { get; set; }
        public virtual DbSet<combo> comboes { get; set; }
        public virtual DbSet<food> foods { get; set; }
        public virtual DbSet<food_combo> food_combo { get; set; }
        public virtual DbSet<index_table> index_table { get; set; }
        public virtual DbSet<menu> menus { get; set; }
        public virtual DbSet<menu_detail> menu_detail { get; set; }
        public virtual DbSet<order> orders { get; set; }
        public virtual DbSet<order_detail> order_detail { get; set; }
        public virtual DbSet<service_time> service_time { get; set; }
        public virtual DbSet<time_menu> time_menu { get; set; }
        public virtual DbSet<transaction> transactions { get; set; }
        public virtual DbSet<user> users { get; set; }
    
        public virtual int sp_add_record_balance(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_record_balance", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_check_login(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_check_login", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_check_user(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_check_user", usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_get_last_index(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_get_last_index", idParameter);
        }
    
        public virtual int sp_update_balance(string userID, Nullable<double> amount)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_balance", userIDParameter, amountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_sign_up(string username, string password, string phone, string email, string name, Nullable<int> role)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_sign_up", usernameParameter, passwordParameter, phoneParameter, emailParameter, nameParameter, roleParameter);
        }
    }
}
